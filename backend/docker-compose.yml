# Docker Compose for AgentScope Backend
# Development and production configurations

version: '3.8'

services:
  # ============================================================================
  # Backend API
  # ============================================================================
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agentscope-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/agentscope
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
    networks:
      - agentscope-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================================================
  # PostgreSQL Database (Optional - can use SQLite)
  # ============================================================================
  db:
    image: postgres:15-alpine
    container_name: agentscope-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: agentscope
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - agentscope-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================================================
  # Nginx Reverse Proxy (Production)
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: agentscope-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - agentscope-network
    profiles:
      - production

networks:
  agentscope-network:
    driver: bridge

volumes:
  postgres-data:
